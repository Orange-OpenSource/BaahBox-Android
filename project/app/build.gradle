/**
     Orange Baah Box
     Copyright (C) 2017 â€“ 2020 Orange SA

     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'changelog'

apply plugin: 'com.orange.labs.properties-file-checker'
apply plugin: 'com.orange.labs.copyright-checker'
apply plugin: 'com.akaita.android.easylauncher'


// *****************
// App configuration
// *****************

android {

    compileSdkVersion 28

    defaultConfig {
        applicationId "com.orange.labs.orangetrainingbox" + applicationIdSuffix
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 31
        versionName "0.8.0"
        vectorDrawables.useSupportLibrary true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"

    productFlavors {
        alpha {
            dimension "version"
            applicationIdSuffix ".alpha"
            versionNameSuffix "-alpha"
        }
        beta {
            dimension "version"
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
        }
        primezone {
            dimension "version"
            applicationIdSuffix ".pz"
            versionNameSuffix "-pz"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

// *******************
// Dependencies to get
// *******************

dependencies {

    // Common things
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.kotlinCoroutinesVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    implementation 'androidx.cardview:cardview:1.0.0'

    // Navigation
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation "android.arch.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacySupportVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"

    // ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // Preferences
    implementation "androidx.preference:preference:$rootProject.preferencesVersion"

    // Material Design
    implementation "androidx.legacy:legacy-support-core-utils:$rootProject.coreUtilsVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"

    // LicensesDialog: to display third party contents
    implementation "de.psdev.licensesdialog:licensesdialog:$rootProject.licensesDialogVersion"

    // Unit tests
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.archCoreTestingVersion"

    // Instrumented tests
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "android.arch.navigation:navigation-testing-ktx:$rootProject.navigationVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    androidTestImplementation ("com.android.support.test:rules:$rootProject.testRules"){
        exclude module: 'support-annotations'
    }
    androidTestImplementation ("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"){
        exclude module: 'support-annotations'
    }
    androidTestImplementation ("com.android.support.test:runner:$rootProject.runnerVersion"){
        exclude module: 'support-annotations'
    }

    // Documentation
//    dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:$rootProject.dokkaVersion")

}

// *****
// Tasks
// *****

// To write HTML documentation
// See https://www.kotlinresources.com/library/dokka/

dokka {
    outputFormat = 'html'
    outputDirectory = "../doc/dokka"

    configuration {
        moduleName = "data"

        includeNonPublic = true
        skipDeprecated = false
        reportUndocumented = true
        skipEmptyPackages = false

        targets = ["JVM"]
        platform = "JVM"

        classpath = [new File("$buildDir/other.jar")]

        sourceRoot {
            path = "src"
        }

        jdkVersion = 8

        noStdlibLink = false
        noJdkLink = false

    }
}


// To keep an up-to-date changelog
changelog {
    file "../CHANGELOG-temp.md"
    appName "Orange Baah Box"
    versionNum "${android.defaultConfig.versionName}"
    versionText "- version code: ${android.defaultConfig.versionCode}"
    repoUrl "https://gitlab.forge.orange-labs.fr/3dhandz/training-box"
    trackerUrl "https://gitlab.forge.orange-labs.fr/3dhandz/training-box"
    from ""
    to "HEAD"
    match "^fix|^doc|^test|^feat|^fix|^perf|^refactor|BREAKING" // style and chore are not parsed
}

// To check if properties file are well formatted
propertieschecker {
    rulesFile "app/src/main/assets/app_configuration.rules.properties"
    targetFile "app/src/main/assets/app_configuration.properties"
}

// To check if assets are copyrighted
copyrightchecker {
    folderToCheck "app/src/main/res"
    creditLineToFind "Baah Box, (c) Copyright Orange SA 2017-2019, CC-BY-SA 4.0"
    verbose false
}

// To customize the icons with ribbons
easylauncher {
    iconNames "@mipmap/ic_launcher"
    foregroundIconNames "@mipmap/ic_launcher"
    defaultFlavorNaming = true
    productFlavors {
        alpha {
            filters = redRibbonFilter()
        }
        beta {
            filters = blueRibbonFilter()
        }
        primezone {
            filters = orangeRibbonFilter()
        }
    }
}
